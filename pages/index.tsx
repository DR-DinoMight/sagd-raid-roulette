import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import styles from '../styles/Home.module.css'

// Add state for minViewers, channel, and roulette results
const Home: NextPage = () => {
  const [rouletteState, setRouletteState] = useState({
    minViewers: 0,
    channel: '',
    results: {},
  })

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setRouletteState({
      ...rouletteState,
      minViewers: event.target.value,
    });
  }

  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    const results = await fetch(`/api/channel?minViewers=${rouletteState.minViewers}`)
    console.log(results);
    const resultsJson = await results.json();
    console.log(resultsJson);
    setRouletteState({
      ...rouletteState,
      results: resultsJson,
    });
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Software and Game Development stream roulette</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      {/* a form asking the user to fill out how many viewers should be the minium viewership */}
        <form className={styles.form} onSubmit={handleSubmit}>
          <h1>Software and Game Development stream roulette</h1>
          <label className={styles.label} htmlFor="min_viewers" >
            Min Viewers
          </label>
          <input className={styles.input} id="min_viewers" type="number" onChange={handleChange} value={rouletteState.minViewers} />
          {/* button to submit */}
          <button className={styles.button}>Spin</button>
        </form>

        {/* check if result isn't empty and have error */}
        {rouletteState.results.error && <p className={styles.error}>{rouletteState.results.error}</p>}
        {/* if result is not empty, show the results */}
        {rouletteState.results.title && (
          <div className={styles.results}>
            <h2>Results</h2>
              <div  key={rouletteState.results.id}>
                <Image
                  src={rouletteState.results.thumbnail_url.replace('{width}', '320').replace('{height}', '180')}
                  alt={rouletteState.results.title}
                  width="320"
                  height="180"
                />
                <div>
                  <h3>{rouletteState.results.title}</h3>
                  <p>{rouletteState.results.viewer_count} viewers</p>
                  <h3>Copy raid command</h3>
                  <pre onClick={() => {navigator.clipboard.writeText(`/raid ${rouletteState.results.user_login}`)}}>/raid {rouletteState.results.user_login}</pre>
                  <iframe src={rouletteState.results.stream_url} className={styles.stream}></iframe>
                </div>
              </div>
          </div>
        )}

      </main>
    </div>
  )
}

export default Home
